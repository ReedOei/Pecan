#import("reals.pn")

Restrict x, y, delta are real.

within(x, y, delta) := @postprocess[
    abs(x - y) < delta
]

Define isContinuous f :=
    let $IM_WITHIN := f ^ "_within" in
    let $THM := f ^ "_continuous" in do
        emit { $THM() :=
            forall x.
            forall eps is real.
            if eps > 0 then
                exists delta.
                forall x0 is real. @postprocess[
                    if @postprocess[within(x, x0, delta)] then
                        within(f(x), f(x0), eps)
                ]
        };
        emit { #assert_prop(true, $THM) }
    .

f(x, y) := y = 2*x

Execute isContinuous f.

