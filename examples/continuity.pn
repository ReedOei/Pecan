#import("reals.pn")

Define isContinuous f :=
    let $THM := f ^ "_continuous" in do
        emit { $THM() := @no_simplify[
            forall x, eps are real.
            if eps > 0 then
                exists delt is real.
                forall x0, y, y0, diff, fdiff are real. @simplify[@postprocess[
                    if @postprocess[f(x, y) & f(x0, y0) & abs(x - x0, diff) & abs(y - y0, fdiff) & diff < delt] then
                        fdiff < eps
                ]]
        ]};
        emit { #assert_prop(true, $THM) }
    .

Restrict x, y are real.
f(x, y) := y = 2*x

Execute isContinuous f.

