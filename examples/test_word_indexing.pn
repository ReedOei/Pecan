thue_morse(x) := odd_ones(x)
Restrict i, j, n are binary.

tm(i, j) := thue_morse(i) <=> thue_morse(j)
test_equality(i, j) := thue_morse[i] = thue_morse[j]
index_equality_works() := forall i. forall j. test_equality(i, j) <=> tm(i, j)
#assert_prop(true, index_equality_works)

tm_not(i, j) := !(thue_morse(i) <=> thue_morse(j))
test_inequality(i, j) := thue_morse[i] != thue_morse[j]
index_inequality_works() := forall i. forall j. test_inequality(i, j) <=> tm_not(i, j)
#assert_prop(true, index_inequality_works)

square(i, n) := n > 0 & thue_morse[i..i+n] = thue_morse[i+n..i+2*n]
square_prim(i, n) := n > 0 & forall j. j < n => tm(i + j, i + j + n)
square_defs_equiv() := forall i. forall n. square(i, n) <=> square_prim(i, n)
#assert_prop(true, square_defs_equiv)

word_refl() := forall i. thue_morse[i] = thue_morse[i]
#assert_prop(true, word_refl)
word_irrefl() := forall i. thue_morse[i] != thue_morse[i]
#assert_prop(false, word_irrefl)

